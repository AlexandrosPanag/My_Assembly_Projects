; DECLARATION POINT 

PORTA.DATA EQU $0000
PORTB.DATA EQU $0001 
PORTD.DATA EQU $0003 
PORTA.DIRECTION EQU $0004
PORTB.DIRECTION EQU $0005
PORTD.DIRECTION EQU $0007
PORTA.PullUpEn EQU $000D
ROM.START EQU $8000
CORRECT EQU $0040
NUMBER EQU $0041
SCI.CONTROL1 EQU $0013
SCI.CONTROL2 EQU $0014
SCI.CONTROL3 EQU $0015
SCI.STATUS1 EQU $0016
SCI.STATUS2 EQU $0017
SCI.DATA EQU $0018
SCI.BAUD EQU $0019
BSET 5,PORTD.DIRECTION
CLR PORTB.DATA

MOV #%01111111,PORTB.DIRECTION ;DECLARATION POINT
MOV #%00001111,PORTA.PullUpEn
MOV #%11110000,PORTA.DIRECTION
JSR SCI.INIT


MOV #$FF,CORRECT ;WE ARE SETTING THE VALUES EQUAL TO ZERO
JSR SEND_MESSAGE1
CLRX



MAIN.LOOP

JSR RECEIVE ;RECEIVE CHARACCTER
CMPA #!13 ;ENTER΄
BEQ CHECK_PASSWORD ;IF THE PASSWORD IS RIGHT THEN
CMPX #!4 ;IF WE HAVE INSERTED MORE THAN 4 CHARACTERS WAIT


BHI MAIN.LOOP

STA NUMBER
LDA PASSWORD,X
INCΧ ;INCREASING X TO CHECK THE NEXT/UPCOMING DIGIT
CMPA NUMBER ; CHECKING THE DIGIT IF ITS THE SAME AS THE PREVIOUS
BEQ MAIN.LOOP ;
PASSWORD[KEYS_INSERTED]
CLR CORRECT
JMP MAIN.LOOP
CHECK_PASSWORD LDA KEYS_INSERTED

CMPA #!4
BLS IS_WRONG
LDA CORRECT
CMPA #!0
BEQ IS_CORRECT
IS_WRONG JSR SEND_MESSAGE2
JSR SEND_MESSAGE1
CLRX
CLR CORRECT
JMP MAIN.LOOP
IS_CORRECT JSR SEND_MESSAGE1
JMP *
SEND_MESSAGE1 PULLX
CLRX
LOOP1 LDA DISPLAY_TABLE1 ,X
JSR TRANSMIT
INCX
CMPX #!16
BLS LOOP1
PUSX
RTS
SEND_MESSAGE2 PULLX
CLRX
LOOP2 LDA DISPLAY_TABLE2 ,X
JSR
TRANSMIT
INCX
CMPX #!17
BLS LOOP2
PUSX
RTS
RECEIVE BRCLR RDRF,SCI.STATUS1,*
LDA SCI.DATA
RTS
TRANSMIT BRCLR TDRE,SCI.STATUS1,*
STA SCI.DATA
RTS
SCI.INIT MOV #%00100001,SCI.BAUD
MOV #$40,SCI.CONTROL1
MOV #$0C,SCI.CONTROL2
MOV #$00,SCI.CONTROL3
RTS
PASSWORD FCB '12A4'
DISPLAY_TABLE1 FCB 'INSERT PIN CODE:'
DISPLAY_TABLE2 FCB 'WRONG PIN CODE\n!'
DISPLAY_TABLE3 FCB 'PIN CODE ACCEPTED\n'

